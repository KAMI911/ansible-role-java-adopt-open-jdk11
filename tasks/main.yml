---
# tasks file for ansible-role-java-open-jdk11

- name: setting fact
  set_fact:
    java_additional_part: '_{{ java_oj9 }}'
  when: java_engine == 'openj9'

- name: create application administration group
  group:
    name: '{{ java_root_group }}'
    system: true
    state: present
  when:
   - java_root_group is defined
   - java_root_group != "root"
   - java_root_user is defined
   - java_root_user != "root"

- name: create application administration user
  user:
    name: '{{ java_root_user }}'
    group: '{{ java_root_group }}'
    createhome: false
    state: present
    system: true
  when:
   - java_root_group is defined
   - java_root_group != "root"
   - java_root_user is defined
   - java_root_user != "root"

- name: download Java installer
  include_tasks: download.yml

- name: 'copy Java cacerts file'
  copy:
    src: 'cacerts'
    dest: '{{ java_security_folder }}/cacerts'
    owner: '{{ java_root_user }}'
    group: '{{ java_root_group }}'
    backup: true
    force: true

- name: 'refresing {{ java_latest_folder }} link to {{ java_folder }}'
  file:
    src: '{{ java_folder }}'
    dest: '{{ java_latest_folder }}'
    owner: '{{ java_root_user }}'
    group: '{{ java_root_group }}'
    state: link

- name: 'install Java environment variables'
  template:
    src: 'java.sh.j2'
    dest: '/etc/profile.d/java.sh'
    owner: '{{ java_root_user }}'
    group: '{{ java_root_group }}'

- name: 'create link for Java DK binaries if not existing'
  become: true
  shell:
    cmd: 'update-alternatives --install /usr/bin/{{ item }} {{ item }} {{ java_folder }}/bin/{{ item }} {{ java_bins_priority }}'
    creates: '/usr/bin/{{ item }}'
  with_items: "{{ java_bins_jdk }}"
  ignore_errors: yes
  when:
    - java_bins_update
    - java_type == 'jdk'

- name: 'update link for Java DK binaries'
  become: true
  alternatives: link="/usr/bin/{{ item }}" name="{{ item }}" path="{{ java_folder }}/bin/{{ item }}" priority={{ java_bins_priority }}
  with_items: "{{ java_bins_jdk }}"
  ignore_errors: yes
  when:
    - java_bins_update
    - java_type == 'jdk'

- name: 'create link for Java Server RE binaries if not existing'
  become: true
  shell:
    cmd: 'update-alternatives --install /usr/bin/{{ item }} {{ item }} {{ java_folder }}/bin/{{ item }} {{ java_bins_priority }}'
    creates: '/usr/bin/{{ item }}'
  with_items: "{{ java_bins_server_jre }}"
  ignore_errors: yes
  when:
    - java_bins_update
    - java_type == 'server_jre'

- name: 'update link for Java Server RE binaries'
  become: true
  alternatives: link="/usr/bin/{{ item }}" name="{{ item }}" path="{{ java_folder }}/bin/{{ item }}" priority={{ java_bins_priority }}
  with_items: "{{ java_bins_server_jre }}"
  ignore_errors: yes
  when:
    - java_bins_update
    - java_type == 'server_jre'
